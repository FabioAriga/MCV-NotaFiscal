/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Pck_View;

import Pck_Control.ClienteControl;
import Pck_Control.ItemControl;
import Pck_Control.PedidoControl;
import Pck_Control.ProdutoControl;
import Pck_Model.ClienteModel;
import Pck_Model.ItemProdutoModel;
import Pck_Model.PedidoModel;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ariga
 */
public class NotaFiscalView extends javax.swing.JFrame {

    /**
     * Creates new form NotaFiscalView
     */
    public NotaFiscalView() {
        initComponents();
        setExtendedState(MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Nota Fiscal");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 9;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 290, 0, 0);
        getContentPane().add(jLabel1, gridBagConstraints);

        jLabel3.setText("Nome cliente");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(11, 59, 0, 0);
        getContentPane().add(jLabel3, gridBagConstraints);

        jLabel2.setText("CPF");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 18;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(11, 97, 0, 0);
        getContentPane().add(jLabel2, gridBagConstraints);

        jTextField1.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 237;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 90, 0, 0);
        getContentPane().add(jTextField1, gridBagConstraints);

        jTextField2.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 236;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 90, 0, 0);
        getContentPane().add(jTextField2, gridBagConstraints);

        jLabel5.setText("Valor total");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(14, 127, 0, 0);
        getContentPane().add(jLabel5, gridBagConstraints);

        jTextField4.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.ipadx = 235;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(15, 103, 0, 0);
        getContentPane().add(jTextField4, gridBagConstraints);

        jButton1.setText("Comfirmar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(126, 109, 0, 0);
        getContentPane().add(jButton1, gridBagConstraints);

        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 11;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(9, 109, 0, 0);
        getContentPane().add(jButton2, gridBagConstraints);

        jButton3.setText("Voltar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(32, 109, 0, 0);
        getContentPane().add(jButton3, gridBagConstraints);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id_item", "id_produto", "Nome produto", "Valor unitario", "Quantidade", "Valor item"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 1065;
        gridBagConstraints.ipady = 283;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 0);
        getContentPane().add(jScrollPane1, gridBagConstraints);

        jLabel4.setText("Codigo pedido");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 9;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(11, 97, 0, 0);
        getContentPane().add(jLabel4, gridBagConstraints);

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 238;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 59, 0, 0);
        getContentPane().add(jTextField3, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int ia02_codigo = Integer.parseInt(jTextField3.getText());
        double da02_valor_total = Double.parseDouble(jTextField4.getText());
        long la01_cpf = Long.parseLong(jTextField2.getText());
        String sa01_data_nasc = "00/00/0000";
        SimpleDateFormat oSimpleDateFormat = new SimpleDateFormat("dd/MM/yyyy");
        Date data = null;
        try{
            data = oSimpleDateFormat.parse(sa01_data_nasc);
        } catch (Exception e){
            JOptionPane.showMessageDialog(this, "Formato da data errado, uso dd/MM/yyyy");
        }
        java.sql.Date da01_data_nasc = new java.sql.Date(data.getTime());
        ClienteControl oClienteControl = new ClienteControl();
        double da01_credito = oClienteControl.buscarCredito(la01_cpf);
        int opcao = JOptionPane.showConfirmDialog(this,
                "O você possui R$ " + String.format("%.2f", da01_credito) + " de credito" + "\nValor total da compra R$ " + String.format("%.2f", da02_valor_total) + "\nDeseja utilizar seus creditos?",
                "Usar Crédito?",
                JOptionPane.YES_NO_OPTION);
        if (opcao == JOptionPane.YES_OPTION) {
            if (da01_credito >= da02_valor_total) {
                double novoCredito = da01_credito - da02_valor_total;
                oClienteControl.atualizarCredito(la01_cpf, novoCredito);
                JOptionPane.showMessageDialog(this,"Crédito suficiente. Pedido pago com sucesso" + ".\nNovo crédito: R$ " + String.format("%.2f", novoCredito));
            } else {
                double falta = da02_valor_total - da01_credito;
                oClienteControl.atualizarCredito(la01_cpf, 0.0);
                JOptionPane.showMessageDialog(this,"Crédito insuficiente. R$ " + String.format("%.2f", da01_credito) + " foram usados.\nFalta R$ " + String.format("%.2f", falta) + " para pagar na maquininha.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Pagar na maquininha o valor R$ " + String.format("%.2f", da02_valor_total));
        }
        ProdutoControl oProdutoControl = new ProdutoControl();
        oProdutoControl.baixaEstoque(ia02_codigo);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        try{        
            int ia02_codigo = Integer.parseInt(jTextField3.getText());
            PedidoControl oPedidoControl = new PedidoControl();
            ClienteModel oClienteModel = oPedidoControl.buscarClienteP(ia02_codigo);
            if (oClienteModel != null) {
                jTextField1.setText(oClienteModel.getA01_nome());
                jTextField2.setText(String.valueOf(oClienteModel.getA01_cpf()));
            } else {
                JOptionPane.showMessageDialog(this, "Cliente não encontrado");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Codigo invalida");
        }
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int ia02_codigo = Integer.parseInt(jTextField3.getText());
        PedidoControl oPedidoControl = new PedidoControl();
        oPedidoControl.removerPedido(ia02_codigo);
        JOptionPane.showMessageDialog(this, "Pedido cancelado");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void ValorTotal(int ia02_codigo){
        try {
                PedidoControl oPedidoControl = new PedidoControl();
                PedidoModel oPedidoModel = oPedidoControl.buscarValorTotal(ia02_codigo);
                if (oPedidoModel != null) {
                    jTextField4.setText(String.valueOf(oPedidoModel.getA02_valor_total()));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao atualizar valor total");
        }
    }
    
    public void atualizarValorTotal(int ia02_codigo){
        ValorTotal(ia02_codigo);
    }
    
    private void TabelaItens(int ia02_codigo) {
        try {
            DefaultTableModel oDefaultTableModel = (DefaultTableModel) jTable1.getModel();
            oDefaultTableModel.setRowCount(0);
            ItemControl oItemControl = new ItemControl();
            List<ItemProdutoModel> lista = oItemControl.listarItens(ia02_codigo);
            for (ItemProdutoModel item : lista) {
                oDefaultTableModel.addRow(new Object[]{
                    item.getA04_codigo(),
                    item.getA03_codigo(),
                    item.getA03_nome(),
                    item.getA03_valor_unitario(),
                    item.getA04_quantidade(),
                    item.getA04_valor_item()
                });
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao atualizar tabela");
        }
    }
    
    public void atualizarTabela(int ia02_codigo){
        TabelaItens(ia02_codigo);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NotaFiscalView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NotaFiscalView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NotaFiscalView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NotaFiscalView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NotaFiscalView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
}
